# Generated by Django 4.2.19 on 2025-05-21 18:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Телефон')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, related_name='bestsneakers_users', to='auth.group', verbose_name='Группы')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='bestsneakers_users_permissions', to='auth.permission', verbose_name='Разрешения')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MainBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('image', models.ImageField(upload_to='banners/', verbose_name='Изображение баннера')),
                ('link', models.URLField(verbose_name='Ссылка при клике')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Главный баннер',
                'verbose_name_plural': 'Главные баннеры',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Общая сумма')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('pending', 'Ожидание'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен')], max_length=50, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Политика конфиденциальности', max_length=100, verbose_name='Название документа')),
                ('file', models.FileField(upload_to='policies/', verbose_name='Файл политики (PDF)')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Текущая версия')),
            ],
            options={
                'verbose_name': 'Политика конфиденциальности',
                'verbose_name_plural': 'Политики конфиденциальности',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.DecimalField(decimal_places=1, max_digits=4)),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
            },
        ),
        migrations.CreateModel(
            name='Sneaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский'), ('U', 'Унисекс')], default='U', max_length=1, verbose_name='Пол')),
                ('color', models.CharField(blank=True, max_length=100, null=True, verbose_name='Цвет')),
                ('image', models.ImageField(blank=True, null=True, upload_to='sneakers/', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sneakers', to='bestsneakers.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sneakers', to='bestsneakers.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Кроссовок',
                'verbose_name_plural': 'Кроссовки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
            ],
            options={
                'verbose_name': 'Права',
                'verbose_name_plural': 'Права',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestsneakers.size', verbose_name='Размер')),
                ('sneaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='bestsneakers.sneaker', verbose_name='Кроссовок')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
                'ordering': ['-date_added'],
            },
        ),
        migrations.AddField(
            model_name='sneaker',
            name='sizes',
            field=models.ManyToManyField(related_name='sneakers', through='bestsneakers.Stock', to='bestsneakers.size', verbose_name='Доступные размеры'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(verbose_name='Рейтинг')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('sneaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bestsneakers.sneaker', verbose_name='Кроссовок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('card', 'Кредитная карта'), ('paypal', 'PayPal'), ('crypto', 'Криптовалюта')], max_length=50, verbose_name='Метод оплаты')),
                ('status', models.CharField(choices=[('pending', 'Ожидание'), ('completed', 'Завершен'), ('failed', 'Неудача')], max_length=50, verbose_name='Статус платежа')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bestsneakers.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена на момент покупки')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bestsneakers.order', verbose_name='Заказ')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestsneakers.size', verbose_name='Размер')),
                ('sneaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestsneakers.sneaker', verbose_name='Кроссовки')),
            ],
            options={
                'verbose_name': 'Элемент заказа',
                'verbose_name_plural': 'Элементы заказа',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='sneakers',
            field=models.ManyToManyField(related_name='orders', through='bestsneakers.OrderItem', to='bestsneakers.sneaker', verbose_name='Кроссовки в заказе'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestsneakers.size', verbose_name='Размер')),
                ('sneaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestsneakers.sneaker', verbose_name='Кроссовок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
    ]
